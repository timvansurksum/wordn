name: GitHub Actions Demo

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # clone the code
      - name: Checkout
        uses: actions/checkout@v2

      # setup python
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      # setup docker compose 
      - run: pip3 install docker-compose --upgrade

      # authenticate with secret
      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      # setup cloud sdk
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'
      - run: 'gcloud auth configure-docker europe-west4-docker.pkg.dev -q'

      # create env file for deployment
      - name: create envfile
        working-directory: ./backend
        run: touch .env && echo SECRET=${{ secrets.JWT_SECRET }} >> .env

      # build & deploy
      - run: docker-compose -f docker-compose.yml -f docker-compose-production.yml build
      - run: docker-compose -f docker-compose.yml -f docker-compose-production.yml push
      - run: gcloud run deploy wordn-frontend --project=wordn-338419 --port=3000 --max-instances=25 --allow-unauthenticated --region=europe-west4 --image=europe-west4-docker.pkg.dev/wordn-338419/images/wordn.frontend:latest
      - run: gcloud run deploy wordn-backend --project=wordn-338419 --port=4000 --max-instances=25 --allow-unauthenticated --region=europe-west4 --image=europe-west4-docker.pkg.dev/wordn-338419/images/wordn.backend:latest

      # notify in slack
      - name: Slack Notify
        uses: rtCamp/action-slack-notify@v2.2.0
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
